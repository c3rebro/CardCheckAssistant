<Page
    x:Class="CardCheckAssistant.Views.Step1Page"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:svc="using:CardCheckAssistant.Services"
    xmlns:viewmodels="using:CardCheckAssistant.ViewModels"
    xmlns:ctWinUIEnum="using:CommunityToolkit.WinUI"
    xmlns:ctWinUI="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:ctWinUIConv="using:CommunityToolkit.WinUI.UI.Converters"
    mc:Ignorable="d"
    Loaded="Page_Loaded">

    <Page.Resources>
        <ctWinUIConv:BoolToVisibilityConverter x:Key="boolean" />
    </Page.Resources>

    <Grid x:Name="ContentArea"
        Margin="0 0 0 0">
        <!-- Beef -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            CornerRadius="8,8,8,8" 
            Grid.ColumnSpan="5" 
            Grid.RowSpan="7">
            <Border>
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Offset="0" Color="#1F000000" />
                        <GradientStop Offset="1" Color="#4F000000" />
                    </RadialGradientBrush>
                </Border.Background>

                <Grid>
                    <StackPanel
                        Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                        <TextBlock
                        Margin="12"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="12"
                        Text="Aktueller Auftrag:" />
                        <TextBlock
                        Margin="12"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="12"
                        Text="{x:Bind ViewModel.JobNumber}" />
                    </StackPanel>

                </Grid>

            </Border>
        </Border>

        <TextBlock 
            Margin="8,8,8,8" 
            Grid.ColumnSpan="5" 
            Grid.Column="0" 
            Grid.Row="0" 
            VerticalAlignment="Center" >
            <Run Text="Bitte nimm eine Karte und lege Sie auf den Kartenleser. Vergewissere Dich, dass der Kartenleser vom Typ: &#x0a;&quot;ELATECH TWN4 Legic&quot;&#x0a;korrekt angeschlossen ist."/>
        </TextBlock>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Error"
            Visibility="{x:Bind ViewModel.HasTwoReadersInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="Es ist mehr als ein Leser gleichzeitig angeschlossen. Bitte entferne den für die Prüfung nicht benötigten Leser."/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Error"
            Visibility="{x:Bind ViewModel.ReaderAccessDenied, Converter={StaticResource boolean}, Mode=TwoWay}"
            Message="Fehler: Der COM Port des Lesers wird von einer anderen Anwendung belegt."/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Informational"
            Visibility="{x:Bind ViewModel.NoChipDetectedInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="Es wurde kein Chip gefunden oder der Chip wird nicht unterstützt. Bitte platziere einen zu prüfenden Chip auf dem Leser. &#x0a;Gegebenenfalls muss der Chip etwas verschoben werden bis er erkannt wird."/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Success"
            Visibility="{x:Bind ViewModel.ChipDetectedInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="{x:Bind ViewModel.ChipInfoMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Error"
            Visibility="{x:Bind ViewModel.NoReaderFound, Converter={StaticResource boolean}, Mode=TwoWay}"
            Message="Fehler: Es wurde kein Leser gefunden."/>
        <TextBlock 
            Margin="8,8,8,8" 
            Grid.ColumnSpan="5" 
            Grid.Column="0" 
            Grid.Row="2" 
            VerticalAlignment="Center" >
            <Run Text="Im Folgenden können die Prüfoptionen verändert werden. Die Spracheneinstellung wird aus Omni übernommen."/>
            <LineBreak/>
        </TextBlock>
        <TextBlock 
            Margin="8,0"
            Grid.ColumnSpan="1" 
            Grid.Column="0" 
            Grid.Row="3" 
            VerticalAlignment="Center" >
            <Run Text="Der Bericht wird in folgender Sprache erstellt werden:"/>
        </TextBlock>
        <TextBlock 
            Margin="8,8"
            Grid.ColumnSpan="1" 
            Grid.Column="0" 
            Grid.Row="4" 
            VerticalAlignment="Center" 
            Visibility="{x:Bind ViewModel.AskPICCMKIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <Run Text="PICC MasterKey / Zugriffsschlüssel für Desfire-Test:"/>
        </TextBlock>
        <TextBox 
            Margin="8,8"
            Grid.ColumnSpan="1" 
            Grid.Column="2" 
            Grid.Row="4" 
            MaxWidth="400"
            IsEnabled="False"
            Visibility="{x:Bind ViewModel.AskPICCMKIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Text="00000000000000000000000000000000"
            VerticalAlignment="Center" >
        </TextBox>
        <TextBlock 
            Margin="8,8"
            Grid.ColumnSpan="1" 
            Grid.Column="0" 
            Grid.Row="4" 
            VerticalAlignment="Center" 
            Visibility="{x:Bind ViewModel.AskClassicKeysIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <Run Text="A/B Zugriffsschlüssel für Classic-Test:"/>
        </TextBlock>
        <TextBox 
            Margin="8,8"
            Grid.ColumnSpan="1" 
            Grid.Column="2" 
            Grid.Row="4" 
            MaxWidth="400"
            IsEnabled="False"
            Text="FFFFFFFFFFFF"
            Visibility="{x:Bind ViewModel.AskClassicKeysIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            VerticalAlignment="Center" >
        </TextBox>
        <!--            ItemsSource="{ctWinUIEnum:EnumValues Type=models:LsmCardTemplates}"-->
        <ComboBox 
            Margin="8,8"
            Grid.ColumnSpan="1" 
            Grid.Column="2" 
            Grid.Row="3" 
            VerticalAlignment="Center" 
            ItemsSource="{x:Bind ViewModel.Languages}"
            SelectedItem="{x:Bind ViewModel.SelectedReportLaguage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <Button 
            Grid.Row="7"
            Grid.Column="0"
            Height="36"
            Margin="0,6,0,0"
            Padding="30,6"
            HorizontalAlignment="Left"
            IsEnabled="{x:Bind ViewModel.GoBackCanExecute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Opacity="1"
            Command="{x:Bind ViewModel.NavigateBackCommand}"
            Content="Zurück">
            <Button.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Opacity="0.6" Color="#BFBFBF" />
                    <SolidColorBrush x:Key="ButtonBackground" Color="IndianRed" />
                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="#73726e" />
                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#f5fa75" />
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#c4c736" />

                    <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="DarkGray" />

                    <SolidColorBrush x:Key="ButtonForeground" Color="Black" />
                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />

                    <!--<SolidColorBrush x:Key="ButtonBorderBrush" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushFocused" Color="#ECF542" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#ECF542" />-->

                    <SolidColorBrush x:Key="ButtonBackgroundFocused" Color="LightGreen" />

                </ResourceDictionary>
            </Button.Resources>
        </Button>
        <Button
            Grid.Row="7"
            Grid.Column="4"
            Height="36"
            Margin="0,6,5,0"
            Padding="30,6"
            HorizontalAlignment="Right"
            IsEnabled="{x:Bind ViewModel.NextStepCanExecute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Opacity="1"
            Command="{x:Bind ViewModel.NavigateNextStepCommand}"
            Content="Weiter">
            <Button.Resources>
                <ResourceDictionary>
                    <SolidColorBrush
                        x:Key="ButtonBorderBrushDisabled"
                        Opacity="0.6"
                        Color="#BFBFBF" />
                    <SolidColorBrush x:Key="ButtonBackground" Color="LimeGreen" />
                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="#73726e" />
                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#f5fa75" />
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#c4c736" />

                    <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="DarkGray" />

                    <SolidColorBrush x:Key="ButtonForeground" Color="Black" />
                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />

                    <!--<SolidColorBrush x:Key="ButtonBorderBrush" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushFocused" Color="#ECF542" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#ECF542" />-->

                    <SolidColorBrush x:Key="ButtonBackgroundFocused" Color="LightGreen" />

                </ResourceDictionary>
            </Button.Resources>
        </Button>

        <ProgressRing 
            Grid.Column="0"
            Grid.Row="0"
            Grid.ColumnSpan="4"
            Grid.RowSpan="8"
            Width="auto"
            Height="auto"
            MaxWidth="250"
            MaxHeight="250"
            Margin="10"
            VerticalContentAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            Visibility="{x:Bind ViewModel.WaitForNextStep, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
        </ProgressRing>

    </Grid>
</Page>
