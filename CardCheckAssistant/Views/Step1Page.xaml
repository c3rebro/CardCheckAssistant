<Page x:Class="CardCheckAssistant.Views.Step1Page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ctWinUIConv="using:CommunityToolkit.WinUI.UI.Converters"
      xmlns:viewmodels="using:CardCheckAssistant.ViewModels"
      mc:Ignorable="d"
      Background="Transparent">
    
    <Page.Resources>
        <ctWinUIConv:BoolToVisibilityConverter x:Key="boolean" />
    </Page.Resources>
    

    <Page.DataContext>
        <viewmodels:Step1PageViewModel />
    </Page.DataContext>

    <Grid Margin="0 0 0 80">
        <!-- Beef -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            CornerRadius="8,8,8,8" Grid.ColumnSpan="5" Grid.RowSpan="7">
            <Border>
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Offset="0" Color="#1F000000" />
                        <GradientStop Offset="1" Color="#4F000000" />
                    </RadialGradientBrush>
                </Border.Background>

                <Grid>
                    <StackPanel
                        Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right">
                        <TextBlock
                        Margin="12"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="12"
                        Text="Aktueller Auftrag:" />
                        <TextBlock
                        Margin="12"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        FontSize="12"
                        Text="{Binding JobNumber}" />
                    </StackPanel>

                </Grid>
                
            </Border>
        </Border>

        <TextBlock 
            Margin="8,8,8,8" 
            Grid.ColumnSpan="5" 
            Grid.Column="0" 
            Grid.Row="0" 
            VerticalAlignment="Center" >
            <Run Text="Bitte nimm eine Karte und lege Sie auf den Kartenleser. Vergewissere Dich, dass der Kartenleser vom Typ: &#x0a;&quot;ELATECH TWN4 Legic&quot;&#x0a;korrekt angeschlossen ist."/>
        </TextBlock>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Error"
            Visibility="{Binding HasTwoReadersInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="Es ist mehr als ein Leser gleichzeitig angeschlossen. Bitte entferne den für die Prüfung nicht benötigten Leser."/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="5"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Informational"
            Visibility="{Binding NoChipDetectedInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="Es wurde kein Chip gefunden oder der Chip wird nicht unterstützt. Bitte platziere einen zu prüfenden Chip auf dem Leser. &#x0a;Gegebenenfalls muss der Chip etwas verschoben werden bis er erkannt wird."/>
        <InfoBar
            Grid.Column="0"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="15"
            IsOpen="True"
            IsIconVisible="True"
            IsClosable="False"
            Title="Leserstatus:"
            Severity="Success"
            Visibility="{Binding ChipDetectedInfoBarIsVisible, Converter={StaticResource boolean}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Message="{Binding ChipInfoMessage, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
        <TextBlock 
            Margin="8,8,8,8" 
            Grid.ColumnSpan="5" 
            Grid.Column="0" 
            Grid.Row="2" 
            VerticalAlignment="Center" >
            <Run Text="Beantworte dann noch die Frage und klicke anschließend auf Weiter. Der Prüfvorgang startet im nächsten Schritt automatisch."/>
            <LineBreak/>
        </TextBlock>
        <TextBlock 
            Margin="8,0"
            Grid.ColumnSpan="3" 
            Grid.Column="0" 
            Grid.Row="3" 
            VerticalAlignment="Center" >
            <Run Text="Frage: In welcher Sprache soll der Bericht erstellt werden?"/>
        </TextBlock>
        <ComboBox 
            Grid.ColumnSpan="1" 
            Grid.Column="3" 
            Grid.Row="3" 
            VerticalAlignment="Center" 
            ItemsSource="{Binding Languages}" 
            SelectedItem="{Binding SelectedReportLaguage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <Button 
            Grid.Row="7"
            Grid.Column="0"
            Height="36"
            Margin="0,6,0,0"
            Padding="30,6"
            HorizontalAlignment="Left"
            IsEnabled="{Binding GoBackCanExecute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Opacity="1"
            Command="{Binding NavigateBackCommand}"
            Content="Zurück">
            <Button.Resources>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Opacity="0.6" Color="#BFBFBF" />
                    <SolidColorBrush x:Key="ButtonBackground" Color="IndianRed" />
                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="#73726e" />
                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#f5fa75" />
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#c4c736" />

                    <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="DarkGray" />

                    <SolidColorBrush x:Key="ButtonForeground" Color="Black" />
                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />

                    <!--<SolidColorBrush x:Key="ButtonBorderBrush" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushFocused" Color="#ECF542" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#ECF542" />-->

                    <SolidColorBrush x:Key="ButtonBackgroundFocused" Color="LightGreen" />

                </ResourceDictionary>
            </Button.Resources>
        </Button>
        <Button
            Grid.Row="7"
            Grid.Column="4"
            Height="36"
            Margin="0,6,5,0"
            Padding="30,6"
            HorizontalAlignment="Right"
            IsEnabled="{Binding NextStepCanExecute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Opacity="1"
            Command="{Binding NavigateNextStepCommand}"
            Content="Weiter">
            <Button.Resources>
                <ResourceDictionary>
                    <SolidColorBrush
                        x:Key="ButtonBorderBrushDisabled"
                        Opacity="0.6"
                        Color="#BFBFBF" />
                    <SolidColorBrush x:Key="ButtonBackground" Color="LimeGreen" />
                    <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="#73726e" />
                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#f5fa75" />
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#c4c736" />

                    <SolidColorBrush x:Key="ButtonForegroundDisabled" Color="DarkGray" />

                    <SolidColorBrush x:Key="ButtonForeground" Color="Black" />
                    <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White" />

                    <!--<SolidColorBrush x:Key="ButtonBorderBrush" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="White" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushFocused" Color="#ECF542" />-->
                    <!--<SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#ECF542" />-->

                    <SolidColorBrush x:Key="ButtonBackgroundFocused" Color="LightGreen" />

                </ResourceDictionary>
            </Button.Resources>
        </Button>
    </Grid>
</Page>
